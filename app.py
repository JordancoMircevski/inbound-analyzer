import streamlit as st
import pandas as pd
from io import BytesIO
import re

st.set_page_config(page_title="üìû –ü—Ä–æ–ø—É—à—Ç–µ–Ω–∏ –ø–æ–≤–∏—Ü–∏", layout="wide")
st.title("üìû –ê–Ω–∞–ª–∏–∑–∞ –Ω–∞ –ø—Ä–æ–ø—É—à—Ç–µ–Ω–∏ (–Ω–µ–ø–æ–≤—Ä–∞—Ç–µ–Ω–∏) –ø–æ–≤–∏—Ü–∏")

st.markdown("‚¨ÜÔ∏è –ü—Ä–∏–∫–∞—á–∏ –≥–∏ Excel —Ñ–∞—ò–ª–æ–≤–∏—Ç–µ –∑–∞ –¥–æ—ò–¥–æ–≤–Ω–∏ –∏ –ø–æ—ò–¥–æ–≤–Ω–∏ –ø–æ–≤–∏—Ü–∏")

# Sidebar ‚Äì upload –Ω–∞ —Ñ–∞—ò–ª–æ–≤–∏
inbound_file = st.sidebar.file_uploader("üì• Inbound —Ñ–∞—ò–ª (–¥–æ—ò–¥–æ–≤–Ω–∏ –ø–æ–≤–∏—Ü–∏)", type=["xlsx"])
outbound_file = st.sidebar.file_uploader("üì§ Outbound —Ñ–∞—ò–ª (–ø–æ—ò–¥–æ–≤–Ω–∏ –ø–æ–≤–∏—Ü–∏)", type=["xlsx"])

if inbound_file and outbound_file:
    # –ß–∏—Ç–∞—ö–µ –Ω–∞ Excel —Ñ–∞—ò–ª–æ–≤–∏—Ç–µ
    df_in = pd.read_excel(inbound_file)
    df_out = pd.read_excel(outbound_file)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –ø–æ—Å—Ç–æ—ò–∞—Ç –ø–æ—Ç—Ä–µ–±–Ω–∏—Ç–µ –∫–æ–ª–æ–Ω–∏
    required_inbound_cols = {'Original Caller Number', 'Start Time', 'Source Trunk Name'}
    required_outbound_cols = {'Callee Number'}

    if not required_inbound_cols.issubset(df_in.columns):
        st.error("‚ùå Inbound —Ñ–∞—ò–ª–æ—Ç –≥–∏ –Ω–µ–º–∞ –ø–æ—Ç—Ä–µ–±–Ω–∏—Ç–µ –∫–æ–ª–æ–Ω–∏.")
    elif not required_outbound_cols.issubset(df_out.columns):
        st.error("‚ùå Outbound —Ñ–∞—ò–ª–æ—Ç –≥–∏ –Ω–µ–º–∞ –ø–æ—Ç—Ä–µ–±–Ω–∏—Ç–µ –∫–æ–ª–æ–Ω–∏.")
    else:
        # –ó–µ–º–∞—ö–µ –Ω–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–∏ –∫–æ–ª–æ–Ω–∏ –∏ —á–∏—Å—Ç–µ—ö–µ
        df_in = df_in[['Original Caller Number', 'Start Time', 'Source Trunk Name']].drop_duplicates(subset='Original Caller Number')
        outbound_numbers = df_out['Callee Number']

        # –ù–∞–ø—Ä–µ–¥–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—ò–∞ –∑–∞ —á–∏—Å—Ç–µ—ö–µ –Ω–∞ –±—Ä–æ–µ–≤–∏
        def clean_number(number):
            if pd.isna(number):
                return ""
            number = str(number)
            number = re.sub(r"[^\d]", "", number)  # –¢—Ä–≥–Ω–∏ —Å√® —à—Ç–æ –Ω–µ –µ –±—Ä–æ—ò–∫–∞
            if number.startswith("00389"):
                number = number[5:]
            elif number.startswith("389"):
                number = number[3:]
            elif number.startswith("07") and len(number) == 9:
                return number  # –í–µ—ú–µ –µ —á–∏—Å—Ç –±—Ä–æ—ò
            return number.lstrip("0")  # –¢—Ä–≥–Ω–∏ –≤–æ–¥–µ—á–∫–∏ –Ω—É–ª–∏ –∞–∫–æ –∏–º–∞

        # –ß–∏—Å—Ç–µ—ö–µ –Ω–∞ –±—Ä–æ–µ–≤–∏—Ç–µ
        df_in['Cleaned Number'] = df_in['Original Caller Number'].apply(clean_number)
        outbound_numbers_cleaned = outbound_numbers.apply(clean_number)

        # –§–∏–ª—Ç—Ä–∏—Ä–∞—ö–µ: –ø—Ä–æ–ø—É—à—Ç–µ–Ω–∏ (–Ω–µ–ø–æ–≤—Ä–∞—Ç–µ–Ω–∏) –±—Ä–æ–µ–≤–∏
        missed = df_in[~df_in['Cleaned Number'].isin(outbound_numbers_cleaned)]

        # –ü—Ä–∏–∫–∞–∑
        st.subheader(f"üìâ –í–∫—É–ø–Ω–æ {len(missed)} –ø—Ä–æ–ø—É—à—Ç–µ–Ω–∏ –ø–æ–≤–∏—Ü–∏ (–Ω–µ–ø–æ–≤—Ä–∞—Ç–µ–Ω–∏):")
        st.dataframe(missed[['Original Caller Number', 'Start Time', 'Source Trunk Name']])

        # –ü—Ä–µ–∑–µ–º–∞—ö–µ –∫–∞–∫–æ Excel
        output = BytesIO()
        missed[['Original Caller Number', 'Start Time', 'Source Trunk Name']].to_excel(output, index=False, engine='openpyxl')
        output.seek(0)

        st.download_button(
            label="‚¨áÔ∏è –ü—Ä–µ–∑–µ–º–∏ –∫–∞–∫–æ Excel",
            data=output,
            file_name="missed_calls.xlsx",
            mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        )
else:
    st.info("üìÇ –ü—Ä–∏–∫–∞—á–∏ –≥–∏ –¥–≤–∞—Ç–∞ —Ñ–∞—ò–ª–∞ –∑–∞ –¥–∞ –∑–∞–ø–æ—á–Ω–µ –∞–Ω–∞–ª–∏–∑–∞—Ç–∞.")
